name: Infra Provision

on:
  push:
    branches:  
      - main
    paths:
      - .github/workflows/infra.yaml
      - ./ccpamappstream/**
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
    paths:
      - .github/workflows/infra.yaml
      - ./ccpamappstream/**

permissions:
  contents: read
  id-token: write
  actions: read

env:
  AWS_REGION: eu-west-2

jobs:
  plan:
    name: Terragrunt Plan (PRs)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install yq & load config
        run: |
          curl -L https://github.com/mikefarah/yq/releases/download/v4.30.8/yq_linux_amd64 \
            -o /usr/local/bin/yq && chmod +x /usr/local/bin/yq
          yq --version
      
      - name: Load config into env vars
        shell: bash
        run: |
          echo "PROJECT_NAME=$(yq e '.config.project_name' config.yaml)"            >> $GITHUB_ENV
          echo "BASE_IMAGE_NAME=$(yq e '.config.base_image_name' config.yaml)"      >> $GITHUB_ENV
          echo "LIVE_ACCOUNT_ID=$(yq e '.config.live_account_id' config.yaml)"      >> $GITHUB_ENV
          echo "PRELIVE_ACCOUNT_ID=$(yq e '.config.prelive_account_id' config.yaml)" >> $GITHUB_ENV
          echo "DOC_SOURCE=$(yq e '.config.doc_source' config.yaml)"                >> $GITHUB_ENV
          echo "VPC_ID=$(yq e '.config.vpc_id' config.yaml)"                        >> $GITHUB_ENV
          echo "SUBNET_ID=$(yq e '.config.subnet_id' config.yaml)"                  >> $GITHUB_ENV
          echo "SECURITY_GROUP_ID=$(yq e '.config.security_group_id' config.yaml)"  >> $GITHUB_ENV
          echo "ACCOUNT_ID=$(yq e '.config.accounts.account_id' config.yaml)"        >> $GITHUB_ENV
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT_ID }}:role/cc-appstream2-terragrunt-plan-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Clean up Terragrunt cache
        run: |
          find . -type d -name '.terragrunt-cache' -prune -exec rm -rf {} +

      - name: Terragrunt Plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: 1.9.3
          tg_version: 0.59.6
          tg_dir: ./ccpamappstream
          tg_command: run-all plan
        timeout-minutes: 20

  apply:
    name: Terragrunt Apply (main)
    needs: plan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install yq & load config
        run: |
          curl -L https://github.com/mikefarah/yq/releases/download/v4.30.8/yq_linux_amd64 \
            -o /usr/local/bin/yq && chmod +x /usr/local/bin/yq
          yq --version

      - name: Load config into env vars
        shell: bash
        run: |
          echo "PROJECT_NAME=$(yq e '.config.project_name' config.yaml)"            >> $GITHUB_ENV
          echo "BASE_IMAGE_NAME=$(yq e '.config.base_image_name' config.yaml)"      >> $GITHUB_ENV
          echo "LIVE_ACCOUNT_ID=$(yq e '.config.live_account_id' config.yaml)"      >> $GITHUB_ENV
          echo "PRELIVE_ACCOUNT_ID=$(yq e '.config.prelive_account_id' config.yaml)" >> $GITHUB_ENV
          echo "DOC_SOURCE=$(yq e '.config.doc_source' config.yaml)"                >> $GITHUB_ENV
          echo "VPC_ID=$(yq e '.config.vpc_id' config.yaml)"                        >> $GITHUB_ENV
          echo "SUBNET_ID=$(yq e '.config.subnet_id' config.yaml)"                  >> $GITHUB_ENV
          echo "SECURITY_GROUP_ID=$(yq e '.config.security_group_id' config.yaml)"  >> $GITHUB_ENV
          echo "ACCOUNT_ID=$(yq e '.config.accounts.account_id' config.yaml)"        >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.ACCOUNT_ID }}:role/cc-appstream2-terragrunt-apply-role
          aws-region: ${{ env.AWS_REGION }}
    
      - name: Terragrunt Apply
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: 1.9.3
          tg_version: 0.59.6
          tg_dir: ./ccpamappstream
          tg_command: run-all apply -auto-approve
